syntax = "proto3";
option go_package = "datasource";

package modelsV2;

message DatasourceRequest {
  TimeRange timeRange = 1;
  DatasourceInfo datasource = 2;
  repeated Query queries = 3;
  uint32 requestId = 4;
}

message Query {
  string refId = 1;
  int64 maxDataPoints = 2;
  int64 intervalMs = 3;
  string modelJson = 4;
}

message TimeRange {
  string fromRaw = 1;
  string toRaw = 2;
  int64 fromEpochMs = 3;
  int64 toEpochMs = 4;
}

message DatasourceResponse {
  repeated QueryResult results = 1;
}

message QueryResult {
  string error = 1;
  string refId = 2;
  string metaJson = 3;
  repeated bytes dataframes = 4;
}

message DatasourceInfo {
  int64 id = 1;
  int64 orgId = 2;
  string name = 3;
  string type = 4;
  string url = 5;
  string jsonData = 6;
  map<string,string> decryptedSecureJsonData = 7;
}

service DatasourcePlugin {
    rpc Query(DatasourceRequest) returns (DatasourceResponse);
}

message QueryDatasourceRequest {
  TimeRange timeRange = 1;
  int64 datasourceId = 2;
  repeated Query queries = 3;
  int64 orgId = 4;
}

message QueryDatasourceResponse {
  repeated QueryResult results = 1;
}

service GrafanaAPI {
    rpc QueryDatasource(QueryDatasourceRequest) returns (QueryDatasourceResponse);
}
