// Code generated by protoc-gen-go. DO NOT EDIT.
// source: backend.proto

package pluginv2

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CheckHealth_Response_HealthStatus int32

const (
	CheckHealth_Response_UNKNOWN CheckHealth_Response_HealthStatus = 0
	CheckHealth_Response_OK      CheckHealth_Response_HealthStatus = 1
	CheckHealth_Response_ERROR   CheckHealth_Response_HealthStatus = 2
)

var CheckHealth_Response_HealthStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "OK",
	2: "ERROR",
}

var CheckHealth_Response_HealthStatus_value = map[string]int32{
	"UNKNOWN": 0,
	"OK":      1,
	"ERROR":   2,
}

func (x CheckHealth_Response_HealthStatus) String() string {
	return proto.EnumName(CheckHealth_Response_HealthStatus_name, int32(x))
}

func (CheckHealth_Response_HealthStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{9, 1, 0}
}

type DataSourceConfig struct {
	Id                   int64    `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Url                  string   `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	User                 string   `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
	Database             string   `protobuf:"bytes,8,opt,name=database,proto3" json:"database,omitempty"`
	BasicAuthEnabled     bool     `protobuf:"varint,9,opt,name=basicAuthEnabled,proto3" json:"basicAuthEnabled,omitempty"`
	BasicAuthUser        string   `protobuf:"bytes,10,opt,name=basicAuthUser,proto3" json:"basicAuthUser,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataSourceConfig) Reset()         { *m = DataSourceConfig{} }
func (m *DataSourceConfig) String() string { return proto.CompactTextString(m) }
func (*DataSourceConfig) ProtoMessage()    {}
func (*DataSourceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{0}
}

func (m *DataSourceConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataSourceConfig.Unmarshal(m, b)
}
func (m *DataSourceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataSourceConfig.Marshal(b, m, deterministic)
}
func (m *DataSourceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataSourceConfig.Merge(m, src)
}
func (m *DataSourceConfig) XXX_Size() int {
	return xxx_messageInfo_DataSourceConfig.Size(m)
}
func (m *DataSourceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DataSourceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DataSourceConfig proto.InternalMessageInfo

func (m *DataSourceConfig) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DataSourceConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DataSourceConfig) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *DataSourceConfig) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *DataSourceConfig) GetDatabase() string {
	if m != nil {
		return m.Database
	}
	return ""
}

func (m *DataSourceConfig) GetBasicAuthEnabled() bool {
	if m != nil {
		return m.BasicAuthEnabled
	}
	return false
}

func (m *DataSourceConfig) GetBasicAuthUser() string {
	if m != nil {
		return m.BasicAuthUser
	}
	return ""
}

type PluginConfig struct {
	OrgId                   int64             `protobuf:"varint,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	PluginId                string            `protobuf:"bytes,2,opt,name=pluginId,proto3" json:"pluginId,omitempty"`
	PluginType              string            `protobuf:"bytes,3,opt,name=pluginType,proto3" json:"pluginType,omitempty"`
	JsonData                []byte            `protobuf:"bytes,4,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
	DecryptedSecureJsonData map[string]string `protobuf:"bytes,5,rep,name=decryptedSecureJsonData,proto3" json:"decryptedSecureJsonData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UpdatedMS               int64             `protobuf:"varint,6,opt,name=updatedMS,proto3" json:"updatedMS,omitempty"`
	DatasourceConfig        *DataSourceConfig `protobuf:"bytes,7,opt,name=datasourceConfig,proto3" json:"datasourceConfig,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}          `json:"-"`
	XXX_unrecognized        []byte            `json:"-"`
	XXX_sizecache           int32             `json:"-"`
}

func (m *PluginConfig) Reset()         { *m = PluginConfig{} }
func (m *PluginConfig) String() string { return proto.CompactTextString(m) }
func (*PluginConfig) ProtoMessage()    {}
func (*PluginConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{1}
}

func (m *PluginConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PluginConfig.Unmarshal(m, b)
}
func (m *PluginConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PluginConfig.Marshal(b, m, deterministic)
}
func (m *PluginConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginConfig.Merge(m, src)
}
func (m *PluginConfig) XXX_Size() int {
	return xxx_messageInfo_PluginConfig.Size(m)
}
func (m *PluginConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PluginConfig proto.InternalMessageInfo

func (m *PluginConfig) GetOrgId() int64 {
	if m != nil {
		return m.OrgId
	}
	return 0
}

func (m *PluginConfig) GetPluginId() string {
	if m != nil {
		return m.PluginId
	}
	return ""
}

func (m *PluginConfig) GetPluginType() string {
	if m != nil {
		return m.PluginType
	}
	return ""
}

func (m *PluginConfig) GetJsonData() []byte {
	if m != nil {
		return m.JsonData
	}
	return nil
}

func (m *PluginConfig) GetDecryptedSecureJsonData() map[string]string {
	if m != nil {
		return m.DecryptedSecureJsonData
	}
	return nil
}

func (m *PluginConfig) GetUpdatedMS() int64 {
	if m != nil {
		return m.UpdatedMS
	}
	return 0
}

func (m *PluginConfig) GetDatasourceConfig() *DataSourceConfig {
	if m != nil {
		return m.DatasourceConfig
	}
	return nil
}

type TimeRange struct {
	FromEpochMS          int64    `protobuf:"varint,1,opt,name=fromEpochMS,proto3" json:"fromEpochMS,omitempty"`
	ToEpochMS            int64    `protobuf:"varint,2,opt,name=toEpochMS,proto3" json:"toEpochMS,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeRange) Reset()         { *m = TimeRange{} }
func (m *TimeRange) String() string { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()    {}
func (*TimeRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{2}
}

func (m *TimeRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeRange.Unmarshal(m, b)
}
func (m *TimeRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeRange.Marshal(b, m, deterministic)
}
func (m *TimeRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeRange.Merge(m, src)
}
func (m *TimeRange) XXX_Size() int {
	return xxx_messageInfo_TimeRange.Size(m)
}
func (m *TimeRange) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeRange.DiscardUnknown(m)
}

var xxx_messageInfo_TimeRange proto.InternalMessageInfo

func (m *TimeRange) GetFromEpochMS() int64 {
	if m != nil {
		return m.FromEpochMS
	}
	return 0
}

func (m *TimeRange) GetToEpochMS() int64 {
	if m != nil {
		return m.ToEpochMS
	}
	return 0
}

type DataQuery struct {
	RefId                string     `protobuf:"bytes,1,opt,name=refId,proto3" json:"refId,omitempty"`
	MaxDataPoints        int64      `protobuf:"varint,2,opt,name=maxDataPoints,proto3" json:"maxDataPoints,omitempty"`
	IntervalMS           int64      `protobuf:"varint,3,opt,name=intervalMS,proto3" json:"intervalMS,omitempty"`
	TimeRange            *TimeRange `protobuf:"bytes,4,opt,name=timeRange,proto3" json:"timeRange,omitempty"`
	Json                 []byte     `protobuf:"bytes,5,opt,name=json,proto3" json:"json,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DataQuery) Reset()         { *m = DataQuery{} }
func (m *DataQuery) String() string { return proto.CompactTextString(m) }
func (*DataQuery) ProtoMessage()    {}
func (*DataQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{3}
}

func (m *DataQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataQuery.Unmarshal(m, b)
}
func (m *DataQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataQuery.Marshal(b, m, deterministic)
}
func (m *DataQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataQuery.Merge(m, src)
}
func (m *DataQuery) XXX_Size() int {
	return xxx_messageInfo_DataQuery.Size(m)
}
func (m *DataQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_DataQuery.DiscardUnknown(m)
}

var xxx_messageInfo_DataQuery proto.InternalMessageInfo

func (m *DataQuery) GetRefId() string {
	if m != nil {
		return m.RefId
	}
	return ""
}

func (m *DataQuery) GetMaxDataPoints() int64 {
	if m != nil {
		return m.MaxDataPoints
	}
	return 0
}

func (m *DataQuery) GetIntervalMS() int64 {
	if m != nil {
		return m.IntervalMS
	}
	return 0
}

func (m *DataQuery) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *DataQuery) GetJson() []byte {
	if m != nil {
		return m.Json
	}
	return nil
}

type User struct {
	Login                string   `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Role                 string   `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{4}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type DataQueryRequest struct {
	// Plugin Configuration
	Config *PluginConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// Environment info
	Headers map[string]string `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// List of queries
	Queries []*DataQuery `protobuf:"bytes,3,rep,name=queries,proto3" json:"queries,omitempty"`
	//Info about the user who calls the plugin.
	User                 *User    `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataQueryRequest) Reset()         { *m = DataQueryRequest{} }
func (m *DataQueryRequest) String() string { return proto.CompactTextString(m) }
func (*DataQueryRequest) ProtoMessage()    {}
func (*DataQueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{5}
}

func (m *DataQueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataQueryRequest.Unmarshal(m, b)
}
func (m *DataQueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataQueryRequest.Marshal(b, m, deterministic)
}
func (m *DataQueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataQueryRequest.Merge(m, src)
}
func (m *DataQueryRequest) XXX_Size() int {
	return xxx_messageInfo_DataQueryRequest.Size(m)
}
func (m *DataQueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataQueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataQueryRequest proto.InternalMessageInfo

func (m *DataQueryRequest) GetConfig() *PluginConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *DataQueryRequest) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *DataQueryRequest) GetQueries() []*DataQuery {
	if m != nil {
		return m.Queries
	}
	return nil
}

func (m *DataQueryRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type DataQueryResponse struct {
	// Arrow encoded DataFrames
	// Each frame encodes its own: Errors, meta, and refId
	Frames [][]byte `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"`
	// Additional response metadata
	Metadata             map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DataQueryResponse) Reset()         { *m = DataQueryResponse{} }
func (m *DataQueryResponse) String() string { return proto.CompactTextString(m) }
func (*DataQueryResponse) ProtoMessage()    {}
func (*DataQueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{6}
}

func (m *DataQueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataQueryResponse.Unmarshal(m, b)
}
func (m *DataQueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataQueryResponse.Marshal(b, m, deterministic)
}
func (m *DataQueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataQueryResponse.Merge(m, src)
}
func (m *DataQueryResponse) XXX_Size() int {
	return xxx_messageInfo_DataQueryResponse.Size(m)
}
func (m *DataQueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DataQueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DataQueryResponse proto.InternalMessageInfo

func (m *DataQueryResponse) GetFrames() [][]byte {
	if m != nil {
		return m.Frames
	}
	return nil
}

func (m *DataQueryResponse) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type CallResource struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallResource) Reset()         { *m = CallResource{} }
func (m *CallResource) String() string { return proto.CompactTextString(m) }
func (*CallResource) ProtoMessage()    {}
func (*CallResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{7}
}

func (m *CallResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallResource.Unmarshal(m, b)
}
func (m *CallResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallResource.Marshal(b, m, deterministic)
}
func (m *CallResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallResource.Merge(m, src)
}
func (m *CallResource) XXX_Size() int {
	return xxx_messageInfo_CallResource.Size(m)
}
func (m *CallResource) XXX_DiscardUnknown() {
	xxx_messageInfo_CallResource.DiscardUnknown(m)
}

var xxx_messageInfo_CallResource proto.InternalMessageInfo

type CallResource_StringList struct {
	Values               []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallResource_StringList) Reset()         { *m = CallResource_StringList{} }
func (m *CallResource_StringList) String() string { return proto.CompactTextString(m) }
func (*CallResource_StringList) ProtoMessage()    {}
func (*CallResource_StringList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{7, 0}
}

func (m *CallResource_StringList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallResource_StringList.Unmarshal(m, b)
}
func (m *CallResource_StringList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallResource_StringList.Marshal(b, m, deterministic)
}
func (m *CallResource_StringList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallResource_StringList.Merge(m, src)
}
func (m *CallResource_StringList) XXX_Size() int {
	return xxx_messageInfo_CallResource_StringList.Size(m)
}
func (m *CallResource_StringList) XXX_DiscardUnknown() {
	xxx_messageInfo_CallResource_StringList.DiscardUnknown(m)
}

var xxx_messageInfo_CallResource_StringList proto.InternalMessageInfo

func (m *CallResource_StringList) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type CallResource_Request struct {
	Config               *PluginConfig                       `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Path                 string                              `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Method               string                              `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	Url                  string                              `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Headers              map[string]*CallResource_StringList `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte                              `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	User                 *User                               `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CallResource_Request) Reset()         { *m = CallResource_Request{} }
func (m *CallResource_Request) String() string { return proto.CompactTextString(m) }
func (*CallResource_Request) ProtoMessage()    {}
func (*CallResource_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{7, 1}
}

func (m *CallResource_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallResource_Request.Unmarshal(m, b)
}
func (m *CallResource_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallResource_Request.Marshal(b, m, deterministic)
}
func (m *CallResource_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallResource_Request.Merge(m, src)
}
func (m *CallResource_Request) XXX_Size() int {
	return xxx_messageInfo_CallResource_Request.Size(m)
}
func (m *CallResource_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CallResource_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CallResource_Request proto.InternalMessageInfo

func (m *CallResource_Request) GetConfig() *PluginConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *CallResource_Request) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CallResource_Request) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *CallResource_Request) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *CallResource_Request) GetHeaders() map[string]*CallResource_StringList {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *CallResource_Request) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *CallResource_Request) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type CallResource_Response struct {
	Code                 int32                               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Headers              map[string]*CallResource_StringList `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte                              `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CallResource_Response) Reset()         { *m = CallResource_Response{} }
func (m *CallResource_Response) String() string { return proto.CompactTextString(m) }
func (*CallResource_Response) ProtoMessage()    {}
func (*CallResource_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{7, 2}
}

func (m *CallResource_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallResource_Response.Unmarshal(m, b)
}
func (m *CallResource_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallResource_Response.Marshal(b, m, deterministic)
}
func (m *CallResource_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallResource_Response.Merge(m, src)
}
func (m *CallResource_Response) XXX_Size() int {
	return xxx_messageInfo_CallResource_Response.Size(m)
}
func (m *CallResource_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CallResource_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CallResource_Response proto.InternalMessageInfo

func (m *CallResource_Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CallResource_Response) GetHeaders() map[string]*CallResource_StringList {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *CallResource_Response) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type CollectMetrics struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectMetrics) Reset()         { *m = CollectMetrics{} }
func (m *CollectMetrics) String() string { return proto.CompactTextString(m) }
func (*CollectMetrics) ProtoMessage()    {}
func (*CollectMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{8}
}

func (m *CollectMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectMetrics.Unmarshal(m, b)
}
func (m *CollectMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectMetrics.Marshal(b, m, deterministic)
}
func (m *CollectMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectMetrics.Merge(m, src)
}
func (m *CollectMetrics) XXX_Size() int {
	return xxx_messageInfo_CollectMetrics.Size(m)
}
func (m *CollectMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_CollectMetrics proto.InternalMessageInfo

type CollectMetrics_Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectMetrics_Request) Reset()         { *m = CollectMetrics_Request{} }
func (m *CollectMetrics_Request) String() string { return proto.CompactTextString(m) }
func (*CollectMetrics_Request) ProtoMessage()    {}
func (*CollectMetrics_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{8, 0}
}

func (m *CollectMetrics_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectMetrics_Request.Unmarshal(m, b)
}
func (m *CollectMetrics_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectMetrics_Request.Marshal(b, m, deterministic)
}
func (m *CollectMetrics_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectMetrics_Request.Merge(m, src)
}
func (m *CollectMetrics_Request) XXX_Size() int {
	return xxx_messageInfo_CollectMetrics_Request.Size(m)
}
func (m *CollectMetrics_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectMetrics_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CollectMetrics_Request proto.InternalMessageInfo

type CollectMetrics_Payload struct {
	Prometheus           []byte   `protobuf:"bytes,1,opt,name=prometheus,proto3" json:"prometheus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectMetrics_Payload) Reset()         { *m = CollectMetrics_Payload{} }
func (m *CollectMetrics_Payload) String() string { return proto.CompactTextString(m) }
func (*CollectMetrics_Payload) ProtoMessage()    {}
func (*CollectMetrics_Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{8, 1}
}

func (m *CollectMetrics_Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectMetrics_Payload.Unmarshal(m, b)
}
func (m *CollectMetrics_Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectMetrics_Payload.Marshal(b, m, deterministic)
}
func (m *CollectMetrics_Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectMetrics_Payload.Merge(m, src)
}
func (m *CollectMetrics_Payload) XXX_Size() int {
	return xxx_messageInfo_CollectMetrics_Payload.Size(m)
}
func (m *CollectMetrics_Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectMetrics_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_CollectMetrics_Payload proto.InternalMessageInfo

func (m *CollectMetrics_Payload) GetPrometheus() []byte {
	if m != nil {
		return m.Prometheus
	}
	return nil
}

type CollectMetrics_Response struct {
	Metrics              *CollectMetrics_Payload `protobuf:"bytes,1,opt,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CollectMetrics_Response) Reset()         { *m = CollectMetrics_Response{} }
func (m *CollectMetrics_Response) String() string { return proto.CompactTextString(m) }
func (*CollectMetrics_Response) ProtoMessage()    {}
func (*CollectMetrics_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{8, 2}
}

func (m *CollectMetrics_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectMetrics_Response.Unmarshal(m, b)
}
func (m *CollectMetrics_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectMetrics_Response.Marshal(b, m, deterministic)
}
func (m *CollectMetrics_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectMetrics_Response.Merge(m, src)
}
func (m *CollectMetrics_Response) XXX_Size() int {
	return xxx_messageInfo_CollectMetrics_Response.Size(m)
}
func (m *CollectMetrics_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectMetrics_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CollectMetrics_Response proto.InternalMessageInfo

func (m *CollectMetrics_Response) GetMetrics() *CollectMetrics_Payload {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type CheckHealth struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckHealth) Reset()         { *m = CheckHealth{} }
func (m *CheckHealth) String() string { return proto.CompactTextString(m) }
func (*CheckHealth) ProtoMessage()    {}
func (*CheckHealth) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{9}
}

func (m *CheckHealth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckHealth.Unmarshal(m, b)
}
func (m *CheckHealth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckHealth.Marshal(b, m, deterministic)
}
func (m *CheckHealth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckHealth.Merge(m, src)
}
func (m *CheckHealth) XXX_Size() int {
	return xxx_messageInfo_CheckHealth.Size(m)
}
func (m *CheckHealth) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckHealth.DiscardUnknown(m)
}

var xxx_messageInfo_CheckHealth proto.InternalMessageInfo

type CheckHealth_Request struct {
	Config               *PluginConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CheckHealth_Request) Reset()         { *m = CheckHealth_Request{} }
func (m *CheckHealth_Request) String() string { return proto.CompactTextString(m) }
func (*CheckHealth_Request) ProtoMessage()    {}
func (*CheckHealth_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{9, 0}
}

func (m *CheckHealth_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckHealth_Request.Unmarshal(m, b)
}
func (m *CheckHealth_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckHealth_Request.Marshal(b, m, deterministic)
}
func (m *CheckHealth_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckHealth_Request.Merge(m, src)
}
func (m *CheckHealth_Request) XXX_Size() int {
	return xxx_messageInfo_CheckHealth_Request.Size(m)
}
func (m *CheckHealth_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckHealth_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CheckHealth_Request proto.InternalMessageInfo

func (m *CheckHealth_Request) GetConfig() *PluginConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type CheckHealth_Response struct {
	Status               CheckHealth_Response_HealthStatus `protobuf:"varint,1,opt,name=status,proto3,enum=pluginv2.CheckHealth_Response_HealthStatus" json:"status,omitempty"`
	Message              string                            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	JsonDetails          string                            `protobuf:"bytes,3,opt,name=jsonDetails,proto3" json:"jsonDetails,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CheckHealth_Response) Reset()         { *m = CheckHealth_Response{} }
func (m *CheckHealth_Response) String() string { return proto.CompactTextString(m) }
func (*CheckHealth_Response) ProtoMessage()    {}
func (*CheckHealth_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{9, 1}
}

func (m *CheckHealth_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckHealth_Response.Unmarshal(m, b)
}
func (m *CheckHealth_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckHealth_Response.Marshal(b, m, deterministic)
}
func (m *CheckHealth_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckHealth_Response.Merge(m, src)
}
func (m *CheckHealth_Response) XXX_Size() int {
	return xxx_messageInfo_CheckHealth_Response.Size(m)
}
func (m *CheckHealth_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckHealth_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CheckHealth_Response proto.InternalMessageInfo

func (m *CheckHealth_Response) GetStatus() CheckHealth_Response_HealthStatus {
	if m != nil {
		return m.Status
	}
	return CheckHealth_Response_UNKNOWN
}

func (m *CheckHealth_Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CheckHealth_Response) GetJsonDetails() string {
	if m != nil {
		return m.JsonDetails
	}
	return ""
}

type StreamingRequest struct {
	PluginId int64 `protobuf:"varint,1,opt,name=pluginId,proto3" json:"pluginId,omitempty"`
	// Environment info
	Headers map[string]string `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The topic we are talking to
	Topic string `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	// The message
	Body string `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	// Flag if the user is already listening
	Subscribed           bool     `protobuf:"varint,5,opt,name=subscribed,proto3" json:"subscribed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingRequest) Reset()         { *m = StreamingRequest{} }
func (m *StreamingRequest) String() string { return proto.CompactTextString(m) }
func (*StreamingRequest) ProtoMessage()    {}
func (*StreamingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{10}
}

func (m *StreamingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingRequest.Unmarshal(m, b)
}
func (m *StreamingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingRequest.Marshal(b, m, deterministic)
}
func (m *StreamingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingRequest.Merge(m, src)
}
func (m *StreamingRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingRequest.Size(m)
}
func (m *StreamingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingRequest proto.InternalMessageInfo

func (m *StreamingRequest) GetPluginId() int64 {
	if m != nil {
		return m.PluginId
	}
	return 0
}

func (m *StreamingRequest) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *StreamingRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *StreamingRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *StreamingRequest) GetSubscribed() bool {
	if m != nil {
		return m.Subscribed
	}
	return false
}

type StreamingMessage struct {
	PluginId             int64    `protobuf:"varint,1,opt,name=pluginId,proto3" json:"pluginId,omitempty"`
	Topic                string   `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingMessage) Reset()         { *m = StreamingMessage{} }
func (m *StreamingMessage) String() string { return proto.CompactTextString(m) }
func (*StreamingMessage) ProtoMessage()    {}
func (*StreamingMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{11}
}

func (m *StreamingMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingMessage.Unmarshal(m, b)
}
func (m *StreamingMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingMessage.Marshal(b, m, deterministic)
}
func (m *StreamingMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingMessage.Merge(m, src)
}
func (m *StreamingMessage) XXX_Size() int {
	return xxx_messageInfo_StreamingMessage.Size(m)
}
func (m *StreamingMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingMessage proto.InternalMessageInfo

func (m *StreamingMessage) GetPluginId() int64 {
	if m != nil {
		return m.PluginId
	}
	return 0
}

func (m *StreamingMessage) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *StreamingMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type StreamingClose struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingClose) Reset()         { *m = StreamingClose{} }
func (m *StreamingClose) String() string { return proto.CompactTextString(m) }
func (*StreamingClose) ProtoMessage()    {}
func (*StreamingClose) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{12}
}

func (m *StreamingClose) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingClose.Unmarshal(m, b)
}
func (m *StreamingClose) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingClose.Marshal(b, m, deterministic)
}
func (m *StreamingClose) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingClose.Merge(m, src)
}
func (m *StreamingClose) XXX_Size() int {
	return xxx_messageInfo_StreamingClose.Size(m)
}
func (m *StreamingClose) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingClose.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingClose proto.InternalMessageInfo

func (m *StreamingClose) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type RenderRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Width                int32    `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Timeout              int32    `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Timezone             string   `protobuf:"bytes,5,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Encoding             string   `protobuf:"bytes,6,opt,name=encoding,proto3" json:"encoding,omitempty"`
	FilePath             string   `protobuf:"bytes,7,opt,name=filePath,proto3" json:"filePath,omitempty"`
	RenderKey            string   `protobuf:"bytes,8,opt,name=renderKey,proto3" json:"renderKey,omitempty"`
	Domain               string   `protobuf:"bytes,9,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenderRequest) Reset()         { *m = RenderRequest{} }
func (m *RenderRequest) String() string { return proto.CompactTextString(m) }
func (*RenderRequest) ProtoMessage()    {}
func (*RenderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{13}
}

func (m *RenderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenderRequest.Unmarshal(m, b)
}
func (m *RenderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenderRequest.Marshal(b, m, deterministic)
}
func (m *RenderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenderRequest.Merge(m, src)
}
func (m *RenderRequest) XXX_Size() int {
	return xxx_messageInfo_RenderRequest.Size(m)
}
func (m *RenderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenderRequest proto.InternalMessageInfo

func (m *RenderRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *RenderRequest) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *RenderRequest) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *RenderRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *RenderRequest) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *RenderRequest) GetEncoding() string {
	if m != nil {
		return m.Encoding
	}
	return ""
}

func (m *RenderRequest) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *RenderRequest) GetRenderKey() string {
	if m != nil {
		return m.RenderKey
	}
	return ""
}

func (m *RenderRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type RenderResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenderResponse) Reset()         { *m = RenderResponse{} }
func (m *RenderResponse) String() string { return proto.CompactTextString(m) }
func (*RenderResponse) ProtoMessage()    {}
func (*RenderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{14}
}

func (m *RenderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenderResponse.Unmarshal(m, b)
}
func (m *RenderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenderResponse.Marshal(b, m, deterministic)
}
func (m *RenderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenderResponse.Merge(m, src)
}
func (m *RenderResponse) XXX_Size() int {
	return xxx_messageInfo_RenderResponse.Size(m)
}
func (m *RenderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenderResponse proto.InternalMessageInfo

func (m *RenderResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterEnum("pluginv2.CheckHealth_Response_HealthStatus", CheckHealth_Response_HealthStatus_name, CheckHealth_Response_HealthStatus_value)
	proto.RegisterType((*DataSourceConfig)(nil), "pluginv2.DataSourceConfig")
	proto.RegisterType((*PluginConfig)(nil), "pluginv2.PluginConfig")
	proto.RegisterMapType((map[string]string)(nil), "pluginv2.PluginConfig.DecryptedSecureJsonDataEntry")
	proto.RegisterType((*TimeRange)(nil), "pluginv2.TimeRange")
	proto.RegisterType((*DataQuery)(nil), "pluginv2.DataQuery")
	proto.RegisterType((*User)(nil), "pluginv2.User")
	proto.RegisterType((*DataQueryRequest)(nil), "pluginv2.DataQueryRequest")
	proto.RegisterMapType((map[string]string)(nil), "pluginv2.DataQueryRequest.HeadersEntry")
	proto.RegisterType((*DataQueryResponse)(nil), "pluginv2.DataQueryResponse")
	proto.RegisterMapType((map[string]string)(nil), "pluginv2.DataQueryResponse.MetadataEntry")
	proto.RegisterType((*CallResource)(nil), "pluginv2.CallResource")
	proto.RegisterType((*CallResource_StringList)(nil), "pluginv2.CallResource.StringList")
	proto.RegisterType((*CallResource_Request)(nil), "pluginv2.CallResource.Request")
	proto.RegisterMapType((map[string]*CallResource_StringList)(nil), "pluginv2.CallResource.Request.HeadersEntry")
	proto.RegisterType((*CallResource_Response)(nil), "pluginv2.CallResource.Response")
	proto.RegisterMapType((map[string]*CallResource_StringList)(nil), "pluginv2.CallResource.Response.HeadersEntry")
	proto.RegisterType((*CollectMetrics)(nil), "pluginv2.CollectMetrics")
	proto.RegisterType((*CollectMetrics_Request)(nil), "pluginv2.CollectMetrics.Request")
	proto.RegisterType((*CollectMetrics_Payload)(nil), "pluginv2.CollectMetrics.Payload")
	proto.RegisterType((*CollectMetrics_Response)(nil), "pluginv2.CollectMetrics.Response")
	proto.RegisterType((*CheckHealth)(nil), "pluginv2.CheckHealth")
	proto.RegisterType((*CheckHealth_Request)(nil), "pluginv2.CheckHealth.Request")
	proto.RegisterType((*CheckHealth_Response)(nil), "pluginv2.CheckHealth.Response")
	proto.RegisterType((*StreamingRequest)(nil), "pluginv2.StreamingRequest")
	proto.RegisterMapType((map[string]string)(nil), "pluginv2.StreamingRequest.HeadersEntry")
	proto.RegisterType((*StreamingMessage)(nil), "pluginv2.StreamingMessage")
	proto.RegisterType((*StreamingClose)(nil), "pluginv2.StreamingClose")
	proto.RegisterType((*RenderRequest)(nil), "pluginv2.RenderRequest")
	proto.RegisterType((*RenderResponse)(nil), "pluginv2.RenderResponse")
}

func init() { proto.RegisterFile("backend.proto", fileDescriptor_5ab9ba5b8d8b2ba5) }

var fileDescriptor_5ab9ba5b8d8b2ba5 = []byte{
	// 1463 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0x4b, 0x8f, 0x1b, 0xc5,
	0x16, 0xbe, 0xed, 0xc7, 0x78, 0xfa, 0xd8, 0x99, 0x38, 0x95, 0x51, 0x62, 0x75, 0x72, 0xe7, 0x4e,
	0xac, 0xe8, 0x32, 0xe1, 0xe1, 0x04, 0x67, 0x01, 0x24, 0x12, 0x28, 0xf1, 0x38, 0xaf, 0x89, 0x93,
	0x49, 0x39, 0x11, 0x22, 0x12, 0x48, 0xe5, 0xee, 0xb2, 0xdd, 0x4c, 0x77, 0x97, 0x53, 0x5d, 0x1d,
	0x30, 0x3f, 0x80, 0x25, 0x2b, 0xb6, 0x88, 0x1d, 0x4b, 0x90, 0xd8, 0xf2, 0x0f, 0xd8, 0x67, 0xc1,
	0x3f, 0x60, 0xcf, 0x82, 0x2d, 0xaa, 0x47, 0x3f, 0x3c, 0x19, 0x3b, 0x4a, 0x08, 0x12, 0xbb, 0x3a,
	0xa7, 0xab, 0x4e, 0x9d, 0xc7, 0x77, 0xbe, 0x3a, 0x0d, 0xc7, 0x46, 0xc4, 0x3d, 0xa0, 0x91, 0xd7,
	0x99, 0x71, 0x26, 0x18, 0x5a, 0x9f, 0x05, 0xc9, 0xc4, 0x8f, 0x9e, 0x76, 0x9d, 0x33, 0x13, 0xc6,
	0x26, 0x01, 0xbd, 0xa8, 0xf4, 0xa3, 0x64, 0x7c, 0x91, 0x86, 0x33, 0x31, 0xd7, 0xdb, 0xda, 0xbf,
	0x5a, 0xd0, 0xdc, 0x25, 0x82, 0x0c, 0x59, 0xc2, 0x5d, 0xda, 0x63, 0xd1, 0xd8, 0x9f, 0xa0, 0x0d,
	0x28, 0xf9, 0x5e, 0xab, 0xb2, 0x6d, 0xed, 0x94, 0x71, 0xc9, 0xf7, 0x10, 0x82, 0x4a, 0x44, 0x42,
	0xda, 0xaa, 0x6e, 0x5b, 0x3b, 0x36, 0x56, 0x6b, 0xd4, 0x84, 0x72, 0xc2, 0x83, 0xd6, 0x9a, 0x52,
	0xc9, 0xa5, 0xdc, 0x95, 0xc4, 0x94, 0xb7, 0x6a, 0x7a, 0x97, 0x5c, 0x23, 0x07, 0xd6, 0x3d, 0x22,
	0xc8, 0x88, 0xc4, 0xb4, 0xb5, 0xae, 0xf4, 0x99, 0x8c, 0xde, 0x84, 0xe6, 0x88, 0xc4, 0xbe, 0x7b,
	0x2d, 0x11, 0xd3, 0x7e, 0x44, 0x46, 0x01, 0xf5, 0x5a, 0xf6, 0xb6, 0xb5, 0xb3, 0x8e, 0x9f, 0xd3,
	0xa3, 0xf3, 0x32, 0x3c, 0xa3, 0x7b, 0x24, 0x2f, 0x01, 0x65, 0x6c, 0x51, 0xd9, 0xfe, 0xae, 0x0c,
	0x8d, 0x7d, 0x15, 0xb6, 0x09, 0x64, 0x13, 0xaa, 0x8c, 0x4f, 0x6e, 0x7b, 0x2d, 0x4b, 0xc5, 0xa2,
	0x05, 0xe9, 0x94, 0x4e, 0xce, 0x6d, 0xaf, 0x55, 0xd2, 0x4e, 0xa5, 0x32, 0xda, 0x02, 0xd0, 0xeb,
	0x87, 0xf3, 0x19, 0x6d, 0x95, 0xd5, 0xd7, 0x82, 0x46, 0x9e, 0xfd, 0x3c, 0x66, 0x91, 0x4c, 0x99,
	0x4a, 0x50, 0x03, 0x67, 0x32, 0x0a, 0xe1, 0xb4, 0x47, 0x5d, 0x3e, 0x9f, 0x09, 0xea, 0x0d, 0xa9,
	0x9b, 0x70, 0x7a, 0x27, 0xdd, 0x5a, 0xdd, 0x2e, 0xef, 0xd4, 0xbb, 0x97, 0x3b, 0x69, 0x51, 0x3a,
	0x45, 0x37, 0x3b, 0xbb, 0x47, 0x9f, 0xea, 0x47, 0x82, 0xcf, 0xf1, 0x32, 0x9b, 0xe8, 0x2c, 0xd8,
	0xc9, 0xcc, 0x23, 0x82, 0x7a, 0x83, 0xa1, 0xaa, 0x43, 0x19, 0xe7, 0x0a, 0x74, 0x03, 0x9a, 0x32,
	0xd3, 0x71, 0xa1, 0xae, 0xaa, 0x32, 0xf5, 0xae, 0x93, 0x7b, 0x71, 0xb8, 0xf2, 0xf8, 0xb9, 0x33,
	0xce, 0x1d, 0x38, 0xbb, 0xca, 0x3d, 0x89, 0x83, 0x03, 0x3a, 0x57, 0x09, 0xb6, 0xb1, 0x5c, 0xca,
	0xa4, 0x3f, 0x25, 0x41, 0x42, 0x4d, 0x6e, 0xb5, 0x70, 0xa5, 0xf4, 0xbe, 0xd5, 0xde, 0x03, 0xfb,
	0xa1, 0x1f, 0x52, 0x4c, 0xa2, 0x09, 0x45, 0xdb, 0x50, 0x1f, 0x73, 0x16, 0xf6, 0x67, 0xcc, 0x9d,
	0x0e, 0x86, 0xa6, 0x42, 0x45, 0x95, 0x0c, 0x50, 0xb0, 0xf4, 0x7b, 0x49, 0x07, 0x98, 0x29, 0xda,
	0x3f, 0x5a, 0x60, 0x4b, 0x37, 0x1e, 0x24, 0x94, 0xab, 0x4b, 0x39, 0x1d, 0x9b, 0x4a, 0xdb, 0x58,
	0x0b, 0x12, 0x36, 0x21, 0xf9, 0x52, 0xee, 0xda, 0x67, 0x7e, 0x24, 0x62, 0x63, 0x65, 0x51, 0x29,
	0x6b, 0xee, 0x47, 0x82, 0xf2, 0xa7, 0x24, 0x18, 0x0c, 0x55, 0xcd, 0xcb, 0xb8, 0xa0, 0x41, 0xef,
	0x82, 0x2d, 0x52, 0xb7, 0x55, 0xd1, 0xeb, 0xdd, 0x93, 0x79, 0x0e, 0xb3, 0x88, 0x70, 0xbe, 0x4b,
	0xf6, 0x82, 0x84, 0x85, 0xea, 0x98, 0x06, 0x56, 0xeb, 0xf6, 0x63, 0xa8, 0x48, 0x94, 0x4a, 0x57,
	0x03, 0x36, 0xf1, 0xa3, 0xd4, 0x55, 0x25, 0x64, 0x3d, 0x56, 0x2a, 0xf4, 0xd8, 0x26, 0x54, 0x69,
	0x48, 0xfc, 0xc0, 0xe0, 0x50, 0x0b, 0x72, 0x27, 0x67, 0x81, 0xf6, 0xc4, 0xc6, 0x6a, 0xdd, 0xfe,
	0xb6, 0xa4, 0xdb, 0x58, 0x25, 0x03, 0xd3, 0x27, 0x09, 0x8d, 0x05, 0xea, 0xc0, 0x9a, 0xab, 0x0b,
	0x6f, 0x29, 0xa7, 0x4f, 0x1d, 0x0d, 0x3f, 0x6c, 0x76, 0xa1, 0x6b, 0x50, 0x9b, 0x52, 0xe2, 0x51,
	0x2e, 0xf3, 0x24, 0xf1, 0xfa, 0xc6, 0x22, 0x52, 0x8a, 0xc6, 0x3b, 0xb7, 0xf4, 0x4e, 0x8d, 0xd1,
	0xf4, 0x1c, 0x7a, 0x07, 0x6a, 0x4f, 0x12, 0xca, 0x7d, 0x1a, 0xb7, 0xca, 0xca, 0xc4, 0xc9, 0xa3,
	0x4c, 0xa4, 0x7b, 0x50, 0xdb, 0x50, 0x86, 0x4e, 0xea, 0x46, 0xbe, 0x57, 0x26, 0x4a, 0x53, 0x88,
	0x73, 0x05, 0x1a, 0xc5, 0xbb, 0x5e, 0x0a, 0x70, 0x3f, 0x59, 0x70, 0xa2, 0xe0, 0x79, 0x3c, 0x63,
	0x51, 0x4c, 0xd1, 0x29, 0x58, 0x1b, 0x73, 0x12, 0xd2, 0xb8, 0x65, 0x6d, 0x97, 0x77, 0x1a, 0xd8,
	0x48, 0xa8, 0x0f, 0xeb, 0x21, 0x15, 0x44, 0xb6, 0x80, 0x49, 0xc0, 0x85, 0x23, 0x13, 0xa0, 0xcd,
	0x74, 0x06, 0x66, 0xaf, 0x4e, 0x41, 0x76, 0xd4, 0xb9, 0x0a, 0xc7, 0x16, 0x3e, 0xbd, 0x94, 0xc7,
	0xbf, 0x57, 0xa0, 0xd1, 0x23, 0x41, 0x80, 0xa9, 0xee, 0x42, 0xe7, 0x3c, 0xc0, 0x50, 0x70, 0x3f,
	0x9a, 0xdc, 0xf5, 0x63, 0x21, 0x5d, 0x57, 0x7b, 0xb5, 0xeb, 0x36, 0x36, 0x92, 0xf3, 0xac, 0x04,
	0xb5, 0x57, 0x2d, 0x3b, 0x82, 0xca, 0x8c, 0x88, 0x69, 0x8a, 0x3c, 0xb9, 0x96, 0xf7, 0x84, 0x54,
	0x4c, 0x99, 0x67, 0xa0, 0x67, 0xa4, 0x94, 0xf5, 0x2b, 0x39, 0xeb, 0xf7, 0x73, 0xd0, 0x68, 0x92,
	0x7b, 0x2b, 0xbf, 0xae, 0x18, 0x48, 0x67, 0x35, 0x70, 0x10, 0x54, 0x46, 0xcc, 0x9b, 0x2b, 0x1e,
	0x6b, 0x60, 0xb5, 0xce, 0xd0, 0x51, 0x5b, 0x81, 0x8e, 0x4f, 0x5f, 0x88, 0x8e, 0xf7, 0x8a, 0xb9,
	0xae, 0x77, 0xcf, 0x2d, 0x71, 0x2f, 0x4f, 0x72, 0xa1, 0x1c, 0xce, 0x6f, 0x16, 0xac, 0x67, 0xb8,
	0x41, 0x50, 0x71, 0x99, 0x47, 0x95, 0xf1, 0x2a, 0x56, 0x6b, 0x74, 0xe3, 0x70, 0xcf, 0xbc, 0xbd,
	0x34, 0x7c, 0x03, 0x9b, 0xd5, 0xf1, 0x97, 0xf3, 0xf8, 0xff, 0xe1, 0xd8, 0xda, 0xdf, 0x58, 0xb0,
	0xd1, 0x63, 0x41, 0x40, 0x5d, 0x31, 0xa0, 0x82, 0xfb, 0x6e, 0xec, 0xd8, 0x19, 0x8a, 0x9c, 0x0b,
	0x50, 0xdb, 0x27, 0xf3, 0x80, 0x11, 0xfd, 0x26, 0x72, 0x26, 0x11, 0x40, 0x93, 0x58, 0x5d, 0xdf,
	0xc0, 0x05, 0x8d, 0x73, 0xa3, 0x90, 0xa3, 0x2b, 0x50, 0x0b, 0xb5, 0x31, 0x83, 0xbe, 0xed, 0x82,
	0x4f, 0x0b, 0x97, 0x75, 0x8c, 0x79, 0x9c, 0x1e, 0x68, 0x7f, 0x5d, 0x82, 0x7a, 0x6f, 0x4a, 0xdd,
	0x83, 0x5b, 0x94, 0x04, 0x62, 0xea, 0x7c, 0xf0, 0xca, 0x98, 0x76, 0x7e, 0x29, 0xd6, 0xad, 0x07,
	0x6b, 0xb1, 0x20, 0xc2, 0xf8, 0xbe, 0xb1, 0x80, 0xd0, 0xfc, 0xba, 0x85, 0x0a, 0x05, 0x62, 0x3a,
	0x54, 0x47, 0xb0, 0x39, 0x8a, 0x5a, 0x32, 0xb0, 0x38, 0x26, 0x93, 0xb4, 0x69, 0x53, 0x51, 0x3e,
	0x64, 0x6a, 0x04, 0xa0, 0x82, 0xf8, 0x41, 0x6c, 0x1a, 0xa6, 0xa8, 0x6a, 0x77, 0x54, 0x21, 0x33,
	0x9b, 0xa8, 0x0e, 0xb5, 0x47, 0xf7, 0xf6, 0xee, 0xdd, 0xff, 0xf8, 0x5e, 0xf3, 0x3f, 0x68, 0x0d,
	0x4a, 0xf7, 0xf7, 0x9a, 0x16, 0xb2, 0xa1, 0xda, 0xc7, 0xf8, 0x3e, 0x6e, 0x96, 0xda, 0x7f, 0x5a,
	0xd0, 0x1c, 0x0a, 0x4e, 0x49, 0xe8, 0x47, 0x93, 0x34, 0x05, 0xc5, 0xa9, 0x45, 0x3f, 0x96, 0xf9,
	0xd4, 0xb2, 0x8a, 0xb9, 0x0f, 0x1b, 0x5a, 0x02, 0xc0, 0x4d, 0xa8, 0x0a, 0x36, 0xf3, 0xdd, 0xf4,
	0xad, 0x51, 0x42, 0x06, 0x4b, 0xf3, 0xd6, 0xa8, 0xb6, 0xdc, 0x02, 0x88, 0x93, 0x51, 0xec, 0x72,
	0x7f, 0x44, 0x3d, 0xf5, 0xc2, 0xad, 0xe3, 0x82, 0xe6, 0x6f, 0x11, 0xf6, 0x67, 0x85, 0xc0, 0x07,
	0x26, 0xbf, 0xab, 0x02, 0xcf, 0xbc, 0x2e, 0x15, 0xbd, 0x2e, 0xd4, 0xaa, 0xbc, 0x50, 0xab, 0xf6,
	0xff, 0x61, 0x23, 0xb3, 0xdf, 0x0b, 0x58, 0xac, 0xde, 0x58, 0x97, 0x25, 0x91, 0x48, 0x47, 0x44,
	0x25, 0xb4, 0xff, 0xb0, 0xe0, 0x18, 0xa6, 0x91, 0x47, 0x79, 0x9a, 0x7e, 0xc3, 0x7c, 0x56, 0xce,
	0x7c, 0x9b, 0x50, 0xfd, 0xc2, 0xf7, 0x0c, 0x71, 0x56, 0xb1, 0x16, 0x24, 0x73, 0x4e, 0xa9, 0x3f,
	0x99, 0x0a, 0x75, 0x75, 0x15, 0x1b, 0x49, 0xfa, 0x24, 0xc7, 0x03, 0x96, 0x08, 0x95, 0xcc, 0x2a,
	0x4e, 0x45, 0x19, 0x9f, 0x5c, 0x7e, 0xc5, 0xa2, 0x74, 0xc2, 0xce, 0x64, 0xf9, 0x8d, 0x46, 0x2e,
	0xf3, 0xfc, 0x68, 0x62, 0x46, 0xed, 0x4c, 0x96, 0xdf, 0xc6, 0x7e, 0x40, 0xf7, 0x25, 0x77, 0xeb,
	0x99, 0x3b, 0x93, 0xe5, 0xe8, 0xc4, 0x95, 0xfb, 0x7b, 0x74, 0x6e, 0x06, 0xef, 0x5c, 0x21, 0x7d,
	0xf4, 0x58, 0x48, 0xfc, 0x48, 0xcd, 0xdb, 0x36, 0x36, 0x92, 0xcc, 0x4e, 0x1a, 0xb4, 0x69, 0x1d,
	0x39, 0x81, 0x70, 0xce, 0x78, 0x3a, 0xab, 0x28, 0xa1, 0xfb, 0xbd, 0x05, 0x95, 0x1e, 0xe3, 0x14,
	0x3d, 0x58, 0x7c, 0xac, 0xd0, 0xd6, 0x6a, 0xee, 0x77, 0xfe, 0xf7, 0x02, 0x72, 0xbc, 0x64, 0xa1,
	0xdd, 0xe2, 0x54, 0xe7, 0x2c, 0x1f, 0x40, 0x9c, 0x33, 0x2b, 0xde, 0xe6, 0xee, 0xcf, 0x16, 0xd4,
	0x77, 0x7d, 0x32, 0x89, 0x58, 0x2c, 0x7c, 0x37, 0x46, 0x8f, 0x0e, 0x53, 0x1d, 0x5a, 0xce, 0x4b,
	0xe9, 0x05, 0xe7, 0x56, 0xec, 0x30, 0xe9, 0xb9, 0xbb, 0x40, 0x58, 0xe8, 0xbf, 0xcb, 0x88, 0x45,
	0x1b, 0xdc, 0x5a, 0xcd, 0x3b, 0xdd, 0x1f, 0x2c, 0x38, 0x7e, 0x93, 0x93, 0x31, 0x89, 0xc8, 0x7e,
	0x40, 0xc4, 0x98, 0xf1, 0x10, 0x0d, 0x14, 0x8f, 0xfd, 0xcb, 0xb2, 0xfb, 0x00, 0xec, 0x87, 0x9c,
	0x44, 0xb1, 0xf2, 0xf0, 0xf5, 0x98, 0xfc, 0x04, 0x4e, 0x64, 0x26, 0xa5, 0xf3, 0xd7, 0x89, 0x7b,
	0xf0, 0x9a, 0x4c, 0x3f, 0xb3, 0xe0, 0x78, 0xd6, 0xf4, 0xfa, 0xb5, 0x40, 0x1f, 0x41, 0xad, 0xc7,
	0xa2, 0x88, 0xba, 0x02, 0x2d, 0x79, 0x4a, 0x1c, 0xe7, 0x08, 0x0a, 0x35, 0x94, 0x74, 0xc9, 0x92,
	0x8c, 0xbb, 0xcf, 0x99, 0x4b, 0xe3, 0x18, 0x39, 0xcb, 0xb9, 0x76, 0x95, 0x11, 0xf4, 0x21, 0xc0,
	0xae, 0x1f, 0xbb, 0x99, 0x1b, 0xfa, 0x37, 0xbd, 0x93, 0xfe, 0xa6, 0x77, 0xfa, 0xf2, 0x37, 0xdd,
	0x69, 0x1d, 0x61, 0x41, 0x31, 0x57, 0xf7, 0xa6, 0x84, 0x86, 0xec, 0x56, 0xca, 0xd1, 0x55, 0x58,
	0xd3, 0x6b, 0x74, 0x3a, 0xdf, 0xbf, 0x40, 0x60, 0x45, 0x43, 0x8b, 0x4d, 0x7e, 0xbd, 0xf1, 0x18,
	0x3a, 0x57, 0xd3, 0x8f, 0xa3, 0x35, 0xe5, 0xc0, 0xe5, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x4e,
	0xe4, 0x8d, 0xf6, 0x50, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoreClient is the client API for Core service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoreClient interface {
	// HTTP Style request
	CallResource(ctx context.Context, in *CallResource_Request, opts ...grpc.CallOption) (Core_CallResourceClient, error)
	// Well typed query interface
	DataQuery(ctx context.Context, in *DataQueryRequest, opts ...grpc.CallOption) (*DataQueryResponse, error)
}

type coreClient struct {
	cc *grpc.ClientConn
}

func NewCoreClient(cc *grpc.ClientConn) CoreClient {
	return &coreClient{cc}
}

func (c *coreClient) CallResource(ctx context.Context, in *CallResource_Request, opts ...grpc.CallOption) (Core_CallResourceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Core_serviceDesc.Streams[0], "/pluginv2.Core/CallResource", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreCallResourceClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Core_CallResourceClient interface {
	Recv() (*CallResource_Response, error)
	grpc.ClientStream
}

type coreCallResourceClient struct {
	grpc.ClientStream
}

func (x *coreCallResourceClient) Recv() (*CallResource_Response, error) {
	m := new(CallResource_Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreClient) DataQuery(ctx context.Context, in *DataQueryRequest, opts ...grpc.CallOption) (*DataQueryResponse, error) {
	out := new(DataQueryResponse)
	err := c.cc.Invoke(ctx, "/pluginv2.Core/DataQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoreServer is the server API for Core service.
type CoreServer interface {
	// HTTP Style request
	CallResource(*CallResource_Request, Core_CallResourceServer) error
	// Well typed query interface
	DataQuery(context.Context, *DataQueryRequest) (*DataQueryResponse, error)
}

// UnimplementedCoreServer can be embedded to have forward compatible implementations.
type UnimplementedCoreServer struct {
}

func (*UnimplementedCoreServer) CallResource(req *CallResource_Request, srv Core_CallResourceServer) error {
	return status.Errorf(codes.Unimplemented, "method CallResource not implemented")
}
func (*UnimplementedCoreServer) DataQuery(ctx context.Context, req *DataQueryRequest) (*DataQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DataQuery not implemented")
}

func RegisterCoreServer(s *grpc.Server, srv CoreServer) {
	s.RegisterService(&_Core_serviceDesc, srv)
}

func _Core_CallResource_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CallResource_Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreServer).CallResource(m, &coreCallResourceServer{stream})
}

type Core_CallResourceServer interface {
	Send(*CallResource_Response) error
	grpc.ServerStream
}

type coreCallResourceServer struct {
	grpc.ServerStream
}

func (x *coreCallResourceServer) Send(m *CallResource_Response) error {
	return x.ServerStream.SendMsg(m)
}

func _Core_DataQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServer).DataQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pluginv2.Core/DataQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServer).DataQuery(ctx, req.(*DataQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Core_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pluginv2.Core",
	HandlerType: (*CoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DataQuery",
			Handler:    _Core_DataQuery_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CallResource",
			Handler:       _Core_CallResource_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "backend.proto",
}

// DiagnosticsClient is the client API for Diagnostics service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiagnosticsClient interface {
	CollectMetrics(ctx context.Context, in *CollectMetrics_Request, opts ...grpc.CallOption) (*CollectMetrics_Response, error)
	CheckHealth(ctx context.Context, in *CheckHealth_Request, opts ...grpc.CallOption) (*CheckHealth_Response, error)
}

type diagnosticsClient struct {
	cc *grpc.ClientConn
}

func NewDiagnosticsClient(cc *grpc.ClientConn) DiagnosticsClient {
	return &diagnosticsClient{cc}
}

func (c *diagnosticsClient) CollectMetrics(ctx context.Context, in *CollectMetrics_Request, opts ...grpc.CallOption) (*CollectMetrics_Response, error) {
	out := new(CollectMetrics_Response)
	err := c.cc.Invoke(ctx, "/pluginv2.Diagnostics/CollectMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diagnosticsClient) CheckHealth(ctx context.Context, in *CheckHealth_Request, opts ...grpc.CallOption) (*CheckHealth_Response, error) {
	out := new(CheckHealth_Response)
	err := c.cc.Invoke(ctx, "/pluginv2.Diagnostics/CheckHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiagnosticsServer is the server API for Diagnostics service.
type DiagnosticsServer interface {
	CollectMetrics(context.Context, *CollectMetrics_Request) (*CollectMetrics_Response, error)
	CheckHealth(context.Context, *CheckHealth_Request) (*CheckHealth_Response, error)
}

// UnimplementedDiagnosticsServer can be embedded to have forward compatible implementations.
type UnimplementedDiagnosticsServer struct {
}

func (*UnimplementedDiagnosticsServer) CollectMetrics(ctx context.Context, req *CollectMetrics_Request) (*CollectMetrics_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CollectMetrics not implemented")
}
func (*UnimplementedDiagnosticsServer) CheckHealth(ctx context.Context, req *CheckHealth_Request) (*CheckHealth_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckHealth not implemented")
}

func RegisterDiagnosticsServer(s *grpc.Server, srv DiagnosticsServer) {
	s.RegisterService(&_Diagnostics_serviceDesc, srv)
}

func _Diagnostics_CollectMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CollectMetrics_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiagnosticsServer).CollectMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pluginv2.Diagnostics/CollectMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiagnosticsServer).CollectMetrics(ctx, req.(*CollectMetrics_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Diagnostics_CheckHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckHealth_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiagnosticsServer).CheckHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pluginv2.Diagnostics/CheckHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiagnosticsServer).CheckHealth(ctx, req.(*CheckHealth_Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Diagnostics_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pluginv2.Diagnostics",
	HandlerType: (*DiagnosticsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CollectMetrics",
			Handler:    _Diagnostics_CollectMetrics_Handler,
		},
		{
			MethodName: "CheckHealth",
			Handler:    _Diagnostics_CheckHealth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend.proto",
}

// GrafanaPlatformClient is the client API for GrafanaPlatform service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrafanaPlatformClient interface {
	Resource(ctx context.Context, in *CallResource_Request, opts ...grpc.CallOption) (GrafanaPlatform_ResourceClient, error)
	DataQuery(ctx context.Context, in *DataQueryRequest, opts ...grpc.CallOption) (*DataQueryResponse, error)
}

type grafanaPlatformClient struct {
	cc *grpc.ClientConn
}

func NewGrafanaPlatformClient(cc *grpc.ClientConn) GrafanaPlatformClient {
	return &grafanaPlatformClient{cc}
}

func (c *grafanaPlatformClient) Resource(ctx context.Context, in *CallResource_Request, opts ...grpc.CallOption) (GrafanaPlatform_ResourceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GrafanaPlatform_serviceDesc.Streams[0], "/pluginv2.GrafanaPlatform/Resource", opts...)
	if err != nil {
		return nil, err
	}
	x := &grafanaPlatformResourceClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GrafanaPlatform_ResourceClient interface {
	Recv() (*CallResource_Response, error)
	grpc.ClientStream
}

type grafanaPlatformResourceClient struct {
	grpc.ClientStream
}

func (x *grafanaPlatformResourceClient) Recv() (*CallResource_Response, error) {
	m := new(CallResource_Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *grafanaPlatformClient) DataQuery(ctx context.Context, in *DataQueryRequest, opts ...grpc.CallOption) (*DataQueryResponse, error) {
	out := new(DataQueryResponse)
	err := c.cc.Invoke(ctx, "/pluginv2.GrafanaPlatform/DataQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrafanaPlatformServer is the server API for GrafanaPlatform service.
type GrafanaPlatformServer interface {
	Resource(*CallResource_Request, GrafanaPlatform_ResourceServer) error
	DataQuery(context.Context, *DataQueryRequest) (*DataQueryResponse, error)
}

// UnimplementedGrafanaPlatformServer can be embedded to have forward compatible implementations.
type UnimplementedGrafanaPlatformServer struct {
}

func (*UnimplementedGrafanaPlatformServer) Resource(req *CallResource_Request, srv GrafanaPlatform_ResourceServer) error {
	return status.Errorf(codes.Unimplemented, "method Resource not implemented")
}
func (*UnimplementedGrafanaPlatformServer) DataQuery(ctx context.Context, req *DataQueryRequest) (*DataQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DataQuery not implemented")
}

func RegisterGrafanaPlatformServer(s *grpc.Server, srv GrafanaPlatformServer) {
	s.RegisterService(&_GrafanaPlatform_serviceDesc, srv)
}

func _GrafanaPlatform_Resource_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CallResource_Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GrafanaPlatformServer).Resource(m, &grafanaPlatformResourceServer{stream})
}

type GrafanaPlatform_ResourceServer interface {
	Send(*CallResource_Response) error
	grpc.ServerStream
}

type grafanaPlatformResourceServer struct {
	grpc.ServerStream
}

func (x *grafanaPlatformResourceServer) Send(m *CallResource_Response) error {
	return x.ServerStream.SendMsg(m)
}

func _GrafanaPlatform_DataQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrafanaPlatformServer).DataQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pluginv2.GrafanaPlatform/DataQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrafanaPlatformServer).DataQuery(ctx, req.(*DataQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrafanaPlatform_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pluginv2.GrafanaPlatform",
	HandlerType: (*GrafanaPlatformServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DataQuery",
			Handler:    _GrafanaPlatform_DataQuery_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Resource",
			Handler:       _GrafanaPlatform_Resource_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "backend.proto",
}

// TransformClient is the client API for Transform service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransformClient interface {
	DataQuery(ctx context.Context, in *DataQueryRequest, opts ...grpc.CallOption) (*DataQueryResponse, error)
}

type transformClient struct {
	cc *grpc.ClientConn
}

func NewTransformClient(cc *grpc.ClientConn) TransformClient {
	return &transformClient{cc}
}

func (c *transformClient) DataQuery(ctx context.Context, in *DataQueryRequest, opts ...grpc.CallOption) (*DataQueryResponse, error) {
	out := new(DataQueryResponse)
	err := c.cc.Invoke(ctx, "/pluginv2.Transform/DataQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransformServer is the server API for Transform service.
type TransformServer interface {
	DataQuery(context.Context, *DataQueryRequest) (*DataQueryResponse, error)
}

// UnimplementedTransformServer can be embedded to have forward compatible implementations.
type UnimplementedTransformServer struct {
}

func (*UnimplementedTransformServer) DataQuery(ctx context.Context, req *DataQueryRequest) (*DataQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DataQuery not implemented")
}

func RegisterTransformServer(s *grpc.Server, srv TransformServer) {
	s.RegisterService(&_Transform_serviceDesc, srv)
}

func _Transform_DataQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransformServer).DataQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pluginv2.Transform/DataQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransformServer).DataQuery(ctx, req.(*DataQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Transform_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pluginv2.Transform",
	HandlerType: (*TransformServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DataQuery",
			Handler:    _Transform_DataQuery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend.proto",
}

// TransformCallBackClient is the client API for TransformCallBack service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransformCallBackClient interface {
	DataQuery(ctx context.Context, in *DataQueryRequest, opts ...grpc.CallOption) (*DataQueryResponse, error)
}

type transformCallBackClient struct {
	cc *grpc.ClientConn
}

func NewTransformCallBackClient(cc *grpc.ClientConn) TransformCallBackClient {
	return &transformCallBackClient{cc}
}

func (c *transformCallBackClient) DataQuery(ctx context.Context, in *DataQueryRequest, opts ...grpc.CallOption) (*DataQueryResponse, error) {
	out := new(DataQueryResponse)
	err := c.cc.Invoke(ctx, "/pluginv2.TransformCallBack/DataQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransformCallBackServer is the server API for TransformCallBack service.
type TransformCallBackServer interface {
	DataQuery(context.Context, *DataQueryRequest) (*DataQueryResponse, error)
}

// UnimplementedTransformCallBackServer can be embedded to have forward compatible implementations.
type UnimplementedTransformCallBackServer struct {
}

func (*UnimplementedTransformCallBackServer) DataQuery(ctx context.Context, req *DataQueryRequest) (*DataQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DataQuery not implemented")
}

func RegisterTransformCallBackServer(s *grpc.Server, srv TransformCallBackServer) {
	s.RegisterService(&_TransformCallBack_serviceDesc, srv)
}

func _TransformCallBack_DataQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransformCallBackServer).DataQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pluginv2.TransformCallBack/DataQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransformCallBackServer).DataQuery(ctx, req.(*DataQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransformCallBack_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pluginv2.TransformCallBack",
	HandlerType: (*TransformCallBackServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DataQuery",
			Handler:    _TransformCallBack_DataQuery_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend.proto",
}

// StreamingPluginClient is the client API for StreamingPlugin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StreamingPluginClient interface {
	// Called by grafana before the first request
	// Grafana server will set up a websocket that will broadcast to all listeners
	Connect(ctx context.Context, in *PluginConfig, opts ...grpc.CallOption) (StreamingPlugin_ConnectClient, error)
	// If the message is not empty, send that to the user
	// throwing an error will make sure the user is not subscribed
	Process(ctx context.Context, in *StreamingRequest, opts ...grpc.CallOption) (*StreamingMessage, error)
	// Stop streaming to that instance, returns the number of open connections
	Disconnect(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StreamingClose, error)
}

type streamingPluginClient struct {
	cc *grpc.ClientConn
}

func NewStreamingPluginClient(cc *grpc.ClientConn) StreamingPluginClient {
	return &streamingPluginClient{cc}
}

func (c *streamingPluginClient) Connect(ctx context.Context, in *PluginConfig, opts ...grpc.CallOption) (StreamingPlugin_ConnectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StreamingPlugin_serviceDesc.Streams[0], "/pluginv2.StreamingPlugin/Connect", opts...)
	if err != nil {
		return nil, err
	}
	x := &streamingPluginConnectClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type StreamingPlugin_ConnectClient interface {
	Recv() (*StreamingMessage, error)
	grpc.ClientStream
}

type streamingPluginConnectClient struct {
	grpc.ClientStream
}

func (x *streamingPluginConnectClient) Recv() (*StreamingMessage, error) {
	m := new(StreamingMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *streamingPluginClient) Process(ctx context.Context, in *StreamingRequest, opts ...grpc.CallOption) (*StreamingMessage, error) {
	out := new(StreamingMessage)
	err := c.cc.Invoke(ctx, "/pluginv2.StreamingPlugin/Process", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *streamingPluginClient) Disconnect(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StreamingClose, error) {
	out := new(StreamingClose)
	err := c.cc.Invoke(ctx, "/pluginv2.StreamingPlugin/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StreamingPluginServer is the server API for StreamingPlugin service.
type StreamingPluginServer interface {
	// Called by grafana before the first request
	// Grafana server will set up a websocket that will broadcast to all listeners
	Connect(*PluginConfig, StreamingPlugin_ConnectServer) error
	// If the message is not empty, send that to the user
	// throwing an error will make sure the user is not subscribed
	Process(context.Context, *StreamingRequest) (*StreamingMessage, error)
	// Stop streaming to that instance, returns the number of open connections
	Disconnect(context.Context, *empty.Empty) (*StreamingClose, error)
}

// UnimplementedStreamingPluginServer can be embedded to have forward compatible implementations.
type UnimplementedStreamingPluginServer struct {
}

func (*UnimplementedStreamingPluginServer) Connect(req *PluginConfig, srv StreamingPlugin_ConnectServer) error {
	return status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedStreamingPluginServer) Process(ctx context.Context, req *StreamingRequest) (*StreamingMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Process not implemented")
}
func (*UnimplementedStreamingPluginServer) Disconnect(ctx context.Context, req *empty.Empty) (*StreamingClose, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disconnect not implemented")
}

func RegisterStreamingPluginServer(s *grpc.Server, srv StreamingPluginServer) {
	s.RegisterService(&_StreamingPlugin_serviceDesc, srv)
}

func _StreamingPlugin_Connect_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PluginConfig)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StreamingPluginServer).Connect(m, &streamingPluginConnectServer{stream})
}

type StreamingPlugin_ConnectServer interface {
	Send(*StreamingMessage) error
	grpc.ServerStream
}

type streamingPluginConnectServer struct {
	grpc.ServerStream
}

func (x *streamingPluginConnectServer) Send(m *StreamingMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _StreamingPlugin_Process_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StreamingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamingPluginServer).Process(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pluginv2.StreamingPlugin/Process",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamingPluginServer).Process(ctx, req.(*StreamingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StreamingPlugin_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamingPluginServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pluginv2.StreamingPlugin/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamingPluginServer).Disconnect(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _StreamingPlugin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pluginv2.StreamingPlugin",
	HandlerType: (*StreamingPluginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Process",
			Handler:    _StreamingPlugin_Process_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _StreamingPlugin_Disconnect_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Connect",
			Handler:       _StreamingPlugin_Connect_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "backend.proto",
}

// RendererClient is the client API for Renderer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RendererClient interface {
	Render(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*RenderResponse, error)
}

type rendererClient struct {
	cc *grpc.ClientConn
}

func NewRendererClient(cc *grpc.ClientConn) RendererClient {
	return &rendererClient{cc}
}

func (c *rendererClient) Render(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*RenderResponse, error) {
	out := new(RenderResponse)
	err := c.cc.Invoke(ctx, "/pluginv2.Renderer/Render", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RendererServer is the server API for Renderer service.
type RendererServer interface {
	Render(context.Context, *RenderRequest) (*RenderResponse, error)
}

// UnimplementedRendererServer can be embedded to have forward compatible implementations.
type UnimplementedRendererServer struct {
}

func (*UnimplementedRendererServer) Render(ctx context.Context, req *RenderRequest) (*RenderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Render not implemented")
}

func RegisterRendererServer(s *grpc.Server, srv RendererServer) {
	s.RegisterService(&_Renderer_serviceDesc, srv)
}

func _Renderer_Render_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RendererServer).Render(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pluginv2.Renderer/Render",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RendererServer).Render(ctx, req.(*RenderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Renderer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pluginv2.Renderer",
	HandlerType: (*RendererServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Render",
			Handler:    _Renderer_Render_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend.proto",
}
