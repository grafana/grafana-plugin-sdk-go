{
  "$schema": "https://json-schema.org/draft-04/schema#",
  "properties": {
    "refId": {
      "type": "string",
      "description": "RefID is the unique identifier of the query, set by the frontend call."
    },
    "resultAssertions": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "",
            "timeseries-wide",
            "timeseries-long",
            "timeseries-many",
            "timeseries-multi",
            "directory-listing",
            "table",
            "numeric-wide",
            "numeric-multi",
            "numeric-long",
            "log-lines"
          ],
          "description": "Type asserts that the frame matches a known type structure.\n\n\nPossible enum values:\n - `\"\"` \n - `\"timeseries-wide\"` \n - `\"timeseries-long\"` \n - `\"timeseries-many\"` \n - `\"timeseries-multi\"` \n - `\"directory-listing\"` \n - `\"table\"` \n - `\"numeric-wide\"` \n - `\"numeric-multi\"` \n - `\"numeric-long\"` \n - `\"log-lines\"` ",
          "x-enum-description": {}
        },
        "typeVersion": {
          "items": {
            "type": "integer"
          },
          "type": "array",
          "maxItems": 2,
          "minItems": 2,
          "description": "TypeVersion is the version of the Type property. Versions greater than 0.0 correspond to the dataplane\ncontract documentation https://grafana.github.io/dataplane/contract/."
        },
        "maxFrames": {
          "type": "integer",
          "description": "Maximum frame count"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "typeVersion"
      ],
      "description": "Optionally define expected query result behavior"
    },
    "timeRange": {
      "properties": {
        "from": {
          "type": "string",
          "description": "From is the start time of the query.",
          "default": "now-6h",
          "examples": [
            "now-1h"
          ]
        },
        "to": {
          "type": "string",
          "description": "To is the end time of the query.",
          "default": "now",
          "examples": [
            "now"
          ]
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "from",
        "to"
      ],
      "description": "TimeRange represents the query range\nNOTE: unlike generic /ds/query, we can now send explicit time values in each query\nNOTE: the values for timeRange are not saved in a dashboard, they are constructed on the fly"
    },
    "datasource": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The datasource plugin type"
        },
        "uid": {
          "type": "string",
          "description": "Datasource UID"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type"
      ],
      "description": "The datasource"
    },
    "queryType": {
      "type": "string",
      "description": "QueryType is an optional identifier for the type of query.\nIt can be used to distinguish different types of queries."
    },
    "maxDataPoints": {
      "type": "integer",
      "description": "MaxDataPoints is the maximum number of data points that should be returned from a time series query.\nNOTE: the values for maxDataPoints is not saved in the query model.  It is typically calculated\nfrom the number of pixels visible in a visualization"
    },
    "intervalMs": {
      "type": "number",
      "description": "Interval is the suggested duration between time points in a time series query.\nNOTE: the values for intervalMs is not saved in the query model.  It is typically calculated\nfrom the interval required to fill a pixels in the visualization"
    },
    "hide": {
      "type": "boolean",
      "description": "true if query is disabled (ie should not be returned to the dashboard)\nNOTE: this does not always imply that the query should not be executed since\nthe results from a hidden query may be used as the input to other queries (SSE etc)"
    }
  },
  "additionalProperties": true,
  "type": "object",
  "description": "Generic query properties"
}