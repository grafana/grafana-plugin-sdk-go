//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v0alpha1

import (
	common "k8s.io/kube-openapi/pkg/common"
	spec "k8s.io/kube-openapi/pkg/validation/spec"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/grafana/grafana-plugin-sdk-go/backend.QueryDataResponse": schema_backend_query_data_response(ref),
		"github.com/grafana/grafana-plugin-sdk-go/data.Frame": schema_data_frame(ref),
	}
}

func schema_backend_query_data_response(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "results keyed by refId",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"results": *spec.MapProperty(&spec.Schema{
						SchemaProps: spec.SchemaProps{
							Description: "any object for now",
							Type:        []string{"object"},
							Properties: map[string]spec.Schema{},
							AdditionalProperties: &spec.SchemaOrBool{Allows: true},
						},
					}),
				},
				AdditionalProperties: &spec.SchemaOrBool{Allows: false},
			},
		},
	}
}

func schema_data_frame(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "any object for now",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{},
				AdditionalProperties: &spec.SchemaOrBool{Allows: true},
			},
		},
	}
}
