{
  "$schema": "https://json-schema.org/draft-04/schema",
  "definitions": {
    "datasource": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The datasource plugin type"
        },
        "uid": {
          "type": "string",
          "description": "Datasource UID"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "uid"
      ],
      "description": "The datasource"
    },
    "hide": {
      "type": "boolean",
      "description": "true if query is disabled (ie should not be returned to the dashboard)\nNOTE: this does not always imply that the query should not be executed since\nthe results from a hidden query may be used as the input to other queries (SSE etc)"
    },
    "intervalMs": {
      "type": "number",
      "description": "Interval is the suggested duration between time points in a time series query.\nNOTE: the values for intervalMs is not saved in the query model.  It is typically calculated\nfrom the interval required to fill a pixels in the visualization"
    },
    "maxDataPoints": {
      "type": "integer",
      "description": "MaxDataPoints is the maximum number of data points that should be returned from a time series query.\nNOTE: the values for maxDataPoints is not saved in the query model.  It is typically calculated\nfrom the number of pixels visible in a visualization"
    },
    "query": {
      "oneOf": [
        {
          "properties": {
            "expression": {
              "type": "string",
              "minLength": 1,
              "description": "General math expression",
              "examples": [
                "$A + 1",
                "$A/$B"
              ]
            },
            "queryType": {
              "type": "string",
              "pattern": "^math$"
            },
            "maxDataPoints": {
              "$ref": "#/definitions/maxDataPoints"
            },
            "intervalMs": {
              "$ref": "#/definitions/intervalMs"
            },
            "hide": {
              "$ref": "#/definitions/hide"
            },
            "refId": {
              "$ref": "#/definitions/refId"
            },
            "resultAssertions": {
              "$ref": "#/definitions/resultAssertions"
            },
            "timeRange": {
              "$ref": "#/definitions/timeRange"
            },
            "datasource": {
              "$ref": "#/definitions/datasource"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "expression",
            "queryType",
            "refId"
          ]
        },
        {
          "properties": {
            "expression": {
              "type": "string",
              "description": "Reference to other query results"
            },
            "reducer": {
              "type": "string",
              "enum": [
                "sum",
                "mean",
                "min",
                "max",
                "count",
                "last"
              ],
              "description": "The reducer\n\n\nPossible enum values:\n - `\"sum\"` The sum\n - `\"mean\"` The mean\n - `\"min\"` \n - `\"max\"` \n - `\"count\"` \n - `\"last\"` "
            },
            "settings": {
              "properties": {
                "mode": {
                  "type": "string",
                  "enum": [
                    "dropNN",
                    "replaceNN"
                  ],
                  "description": "Non-number reduce behavior\n\n\nPossible enum values:\n - `\"dropNN\"` Drop non-numbers\n - `\"replaceNN\"` Replace non-numbers"
                },
                "replaceWithValue": {
                  "type": "number",
                  "description": "Only valid when mode is replace"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "required": [
                "mode"
              ],
              "description": "Reducer Options"
            },
            "queryType": {
              "type": "string",
              "pattern": "^reduce$"
            },
            "refId": {
              "$ref": "#/definitions/refId"
            },
            "resultAssertions": {
              "$ref": "#/definitions/resultAssertions"
            },
            "timeRange": {
              "$ref": "#/definitions/timeRange"
            },
            "datasource": {
              "$ref": "#/definitions/datasource"
            },
            "maxDataPoints": {
              "$ref": "#/definitions/maxDataPoints"
            },
            "intervalMs": {
              "$ref": "#/definitions/intervalMs"
            },
            "hide": {
              "$ref": "#/definitions/hide"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "expression",
            "reducer",
            "settings",
            "queryType",
            "refId"
          ]
        },
        {
          "properties": {
            "downsampler": {
              "type": "string",
              "description": "The reducer"
            },
            "expression": {
              "type": "string",
              "description": "The math expression"
            },
            "loadedDimensions": {
              "additionalProperties": true,
              "type": "object"
            },
            "upsampler": {
              "type": "string",
              "description": "The reducer"
            },
            "window": {
              "type": "string",
              "description": "A time duration string"
            },
            "queryType": {
              "type": "string",
              "pattern": "^resample$"
            },
            "refId": {
              "$ref": "#/definitions/refId"
            },
            "resultAssertions": {
              "$ref": "#/definitions/resultAssertions"
            },
            "timeRange": {
              "$ref": "#/definitions/timeRange"
            },
            "datasource": {
              "$ref": "#/definitions/datasource"
            },
            "maxDataPoints": {
              "$ref": "#/definitions/maxDataPoints"
            },
            "intervalMs": {
              "$ref": "#/definitions/intervalMs"
            },
            "hide": {
              "$ref": "#/definitions/hide"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "expression",
            "window",
            "downsampler",
            "upsampler",
            "loadedDimensions",
            "queryType",
            "refId"
          ],
          "description": "QueryType = resample"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "queryType": {
      "type": "string",
      "description": "QueryType is an optional identifier for the type of query.\nIt can be used to distinguish different types of queries."
    },
    "refId": {
      "type": "string",
      "description": "RefID is the unique identifier of the query, set by the frontend call."
    },
    "resultAssertions": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Type asserts that the frame matches a known type structure."
        },
        "typeVersion": {
          "items": {
            "type": "integer"
          },
          "type": "array",
          "maxItems": 2,
          "minItems": 2,
          "description": "TypeVersion is the version of the Type property. Versions greater than 0.0 correspond to the dataplane\ncontract documentation https://grafana.github.io/dataplane/contract/."
        },
        "maxBytes": {
          "type": "integer",
          "description": "Maximum bytes that can be read -- if the query planning expects more then this, the query may fail fast"
        },
        "maxFrames": {
          "type": "integer",
          "description": "Maximum frame count"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "typeVersion"
      ],
      "description": "Optionally define expected query result behavior"
    },
    "timeRange": {
      "properties": {
        "from": {
          "type": "string",
          "description": "From is the start time of the query."
        },
        "to": {
          "type": "string",
          "description": "To is the end time of the query."
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "from",
        "to"
      ],
      "description": "TimeRange represents the query range\nNOTE: unlike generic /ds/query, we can now send explicit time values in each query\nNOTE: the values for timeRange are not saved in a dashboard, they are constructed on the fly"
    }
  },
  "properties": {
    "from": {
      "type": "string",
      "description": "From Start time in epoch timestamps in milliseconds or relative using Grafana time units."
    },
    "to": {
      "type": "string",
      "description": "To end time in epoch timestamps in milliseconds or relative using Grafana time units."
    },
    "queries": {
      "items": {
        "$ref": "#/definitions/query"
      },
      "type": "array"
    },
    "debug": {
      "type": "boolean"
    },
    "$schema": {
      "type": "string",
      "description": "Optional schema URL -- this is not really used in production, but helpful for vscode debugging"
    }
  },
  "additionalProperties": false,
  "type": "object",
  "required": [
    "queries"
  ],
  "description": "Datasource request model"
}