{
  "type": "object",
  "required": [
    "targets",
    "type"
  ],
  "properties": {
    "targets": {
      "type": "array",
      "items": {
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "expression",
              "queryType",
              "refId"
            ],
            "properties": {
              "datasource": {
                "description": "The datasource",
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "apiVersion": {
                    "description": "The apiserver version",
                    "type": "string"
                  },
                  "type": {
                    "description": "The datasource plugin type",
                    "type": "string",
                    "pattern": "^__expr__$"
                  },
                  "uid": {
                    "description": "Datasource UID (NOTE: name in k8s)",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "expression": {
                "description": "General math expression",
                "type": "string",
                "minLength": 1,
                "examples": [
                  "$A + 1",
                  "$A/$B"
                ]
              },
              "hide": {
                "description": "true if query is disabled (ie should not be returned to the dashboard)\nNOTE: this does not always imply that the query should not be executed since\nthe results from a hidden query may be used as the input to other queries (SSE etc)",
                "type": "boolean"
              },
              "queryType": {
                "type": "string",
                "pattern": "^math$"
              },
              "refId": {
                "description": "RefID is the unique identifier of the query, set by the frontend call.",
                "type": "string"
              },
              "resultAssertions": {
                "description": "Optionally define expected query result behavior",
                "type": "object",
                "required": [
                  "typeVersion"
                ],
                "properties": {
                  "maxFrames": {
                    "description": "Maximum frame count",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Type asserts that the frame matches a known type structure.\n\n\nPossible enum values:\n - `\"\"` \n - `\"timeseries-wide\"` \n - `\"timeseries-long\"` \n - `\"timeseries-many\"` \n - `\"timeseries-multi\"` \n - `\"directory-listing\"` \n - `\"table\"` \n - `\"numeric-wide\"` \n - `\"numeric-multi\"` \n - `\"numeric-long\"` \n - `\"log-lines\"` ",
                    "type": "string",
                    "enum": [
                      "",
                      "timeseries-wide",
                      "timeseries-long",
                      "timeseries-many",
                      "timeseries-multi",
                      "directory-listing",
                      "table",
                      "numeric-wide",
                      "numeric-multi",
                      "numeric-long",
                      "log-lines"
                    ],
                    "x-enum-description": {}
                  },
                  "typeVersion": {
                    "description": "TypeVersion is the version of the Type property. Versions greater than 0.0 correspond to the dataplane\ncontract documentation https://grafana.github.io/dataplane/contract/.",
                    "type": "array",
                    "maxItems": 2,
                    "minItems": 2,
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "additionalProperties": false
              },
              "timeRange": {
                "description": "TimeRange represents the query range\nNOTE: unlike generic /ds/query, we can now send explicit time values in each query\nNOTE: the values for timeRange are not saved in a dashboard, they are constructed on the fly",
                "type": "object",
                "required": [
                  "from",
                  "to"
                ],
                "properties": {
                  "from": {
                    "description": "From is the start time of the query.",
                    "type": "string",
                    "default": "now-6h",
                    "examples": [
                      "now-1h"
                    ]
                  },
                  "to": {
                    "description": "To is the end time of the query.",
                    "type": "string",
                    "default": "now",
                    "examples": [
                      "now"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "$schema": "https://json-schema.org/draft-04/schema"
          },
          {
            "type": "object",
            "required": [
              "expression",
              "reducer",
              "settings",
              "queryType",
              "refId"
            ],
            "properties": {
              "datasource": {
                "description": "The datasource",
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "apiVersion": {
                    "description": "The apiserver version",
                    "type": "string"
                  },
                  "type": {
                    "description": "The datasource plugin type",
                    "type": "string",
                    "pattern": "^__expr__$"
                  },
                  "uid": {
                    "description": "Datasource UID (NOTE: name in k8s)",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "expression": {
                "description": "Reference to other query results",
                "type": "string"
              },
              "hide": {
                "description": "true if query is disabled (ie should not be returned to the dashboard)\nNOTE: this does not always imply that the query should not be executed since\nthe results from a hidden query may be used as the input to other queries (SSE etc)",
                "type": "boolean"
              },
              "queryType": {
                "type": "string",
                "pattern": "^reduce$"
              },
              "reducer": {
                "description": "The reducer\n\n\nPossible enum values:\n - `\"sum\"` The sum\n - `\"mean\"` The mean\n - `\"min\"` \n - `\"max\"` \n - `\"count\"` \n - `\"last\"` ",
                "type": "string",
                "enum": [
                  "sum",
                  "mean",
                  "min",
                  "max",
                  "count",
                  "last"
                ],
                "x-enum-description": {
                  "mean": "The mean",
                  "sum": "The sum"
                }
              },
              "refId": {
                "description": "RefID is the unique identifier of the query, set by the frontend call.",
                "type": "string"
              },
              "resultAssertions": {
                "description": "Optionally define expected query result behavior",
                "type": "object",
                "required": [
                  "typeVersion"
                ],
                "properties": {
                  "maxFrames": {
                    "description": "Maximum frame count",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Type asserts that the frame matches a known type structure.\n\n\nPossible enum values:\n - `\"\"` \n - `\"timeseries-wide\"` \n - `\"timeseries-long\"` \n - `\"timeseries-many\"` \n - `\"timeseries-multi\"` \n - `\"directory-listing\"` \n - `\"table\"` \n - `\"numeric-wide\"` \n - `\"numeric-multi\"` \n - `\"numeric-long\"` \n - `\"log-lines\"` ",
                    "type": "string",
                    "enum": [
                      "",
                      "timeseries-wide",
                      "timeseries-long",
                      "timeseries-many",
                      "timeseries-multi",
                      "directory-listing",
                      "table",
                      "numeric-wide",
                      "numeric-multi",
                      "numeric-long",
                      "log-lines"
                    ],
                    "x-enum-description": {}
                  },
                  "typeVersion": {
                    "description": "TypeVersion is the version of the Type property. Versions greater than 0.0 correspond to the dataplane\ncontract documentation https://grafana.github.io/dataplane/contract/.",
                    "type": "array",
                    "maxItems": 2,
                    "minItems": 2,
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "additionalProperties": false
              },
              "settings": {
                "description": "Reducer Options",
                "type": "object",
                "required": [
                  "mode"
                ],
                "properties": {
                  "mode": {
                    "description": "Non-number reduce behavior\n\n\nPossible enum values:\n - `\"dropNN\"` Drop non-numbers\n - `\"replaceNN\"` Replace non-numbers",
                    "type": "string",
                    "enum": [
                      "dropNN",
                      "replaceNN"
                    ],
                    "x-enum-description": {
                      "dropNN": "Drop non-numbers",
                      "replaceNN": "Replace non-numbers"
                    }
                  },
                  "replaceWithValue": {
                    "description": "Only valid when mode is replace",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "timeRange": {
                "description": "TimeRange represents the query range\nNOTE: unlike generic /ds/query, we can now send explicit time values in each query\nNOTE: the values for timeRange are not saved in a dashboard, they are constructed on the fly",
                "type": "object",
                "required": [
                  "from",
                  "to"
                ],
                "properties": {
                  "from": {
                    "description": "From is the start time of the query.",
                    "type": "string",
                    "default": "now-6h",
                    "examples": [
                      "now-1h"
                    ]
                  },
                  "to": {
                    "description": "To is the end time of the query.",
                    "type": "string",
                    "default": "now",
                    "examples": [
                      "now"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "$schema": "https://json-schema.org/draft-04/schema"
          },
          {
            "description": "QueryType = resample",
            "type": "object",
            "required": [
              "expression",
              "window",
              "downsampler",
              "upsampler",
              "loadedDimensions",
              "queryType",
              "refId"
            ],
            "properties": {
              "datasource": {
                "description": "The datasource",
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "apiVersion": {
                    "description": "The apiserver version",
                    "type": "string"
                  },
                  "type": {
                    "description": "The datasource plugin type",
                    "type": "string",
                    "pattern": "^__expr__$"
                  },
                  "uid": {
                    "description": "Datasource UID (NOTE: name in k8s)",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "downsampler": {
                "description": "The reducer",
                "type": "string"
              },
              "expression": {
                "description": "The math expression",
                "type": "string"
              },
              "hide": {
                "description": "true if query is disabled (ie should not be returned to the dashboard)\nNOTE: this does not always imply that the query should not be executed since\nthe results from a hidden query may be used as the input to other queries (SSE etc)",
                "type": "boolean"
              },
              "loadedDimensions": {
                "type": "object",
                "additionalProperties": true,
                "x-grafana-type": "data.DataFrame"
              },
              "queryType": {
                "type": "string",
                "pattern": "^resample$"
              },
              "refId": {
                "description": "RefID is the unique identifier of the query, set by the frontend call.",
                "type": "string"
              },
              "resultAssertions": {
                "description": "Optionally define expected query result behavior",
                "type": "object",
                "required": [
                  "typeVersion"
                ],
                "properties": {
                  "maxFrames": {
                    "description": "Maximum frame count",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Type asserts that the frame matches a known type structure.\n\n\nPossible enum values:\n - `\"\"` \n - `\"timeseries-wide\"` \n - `\"timeseries-long\"` \n - `\"timeseries-many\"` \n - `\"timeseries-multi\"` \n - `\"directory-listing\"` \n - `\"table\"` \n - `\"numeric-wide\"` \n - `\"numeric-multi\"` \n - `\"numeric-long\"` \n - `\"log-lines\"` ",
                    "type": "string",
                    "enum": [
                      "",
                      "timeseries-wide",
                      "timeseries-long",
                      "timeseries-many",
                      "timeseries-multi",
                      "directory-listing",
                      "table",
                      "numeric-wide",
                      "numeric-multi",
                      "numeric-long",
                      "log-lines"
                    ],
                    "x-enum-description": {}
                  },
                  "typeVersion": {
                    "description": "TypeVersion is the version of the Type property. Versions greater than 0.0 correspond to the dataplane\ncontract documentation https://grafana.github.io/dataplane/contract/.",
                    "type": "array",
                    "maxItems": 2,
                    "minItems": 2,
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "additionalProperties": false
              },
              "timeRange": {
                "description": "TimeRange represents the query range\nNOTE: unlike generic /ds/query, we can now send explicit time values in each query\nNOTE: the values for timeRange are not saved in a dashboard, they are constructed on the fly",
                "type": "object",
                "required": [
                  "from",
                  "to"
                ],
                "properties": {
                  "from": {
                    "description": "From is the start time of the query.",
                    "type": "string",
                    "default": "now-6h",
                    "examples": [
                      "now-1h"
                    ]
                  },
                  "to": {
                    "description": "To is the end time of the query.",
                    "type": "string",
                    "default": "now",
                    "examples": [
                      "now"
                    ]
                  }
                },
                "additionalProperties": false
              },
              "upsampler": {
                "description": "The reducer",
                "type": "string"
              },
              "window": {
                "description": "A time duration string",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "$schema": "https://json-schema.org/draft-04/schema"
          }
        ],
        "$schema": "https://json-schema.org/draft-04/schema#"
      }
    },
    "type": {
      "description": "the panel type",
      "type": "string"
    }
  },
  "additionalProperties": true,
  "$schema": "https://json-schema.org/draft-04/schema#"
}